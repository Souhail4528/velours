"""
Configuration finale compl√®te avec images multiples
"""
import os
from app import app, db
from models import Product, ProductImage, User

def reset_and_setup():
    """Reset complet et configuration"""
    with app.app_context():
        print("üå∏ CONFIGURATION FINALE AVEC IMAGES MULTIPLES")
        print("=" * 60)
        
        # Reset complet de la base
        db.drop_all()
        db.create_all()
        print("‚úÖ Base de donn√©es r√©initialis√©e")
        
        # Cr√©er les utilisateurs
        admin = User(
            username='admin',
            email='admin@parfum.com',
            password_hash='pbkdf2:sha256:600000$salt$hash',
            first_name='Admin',
            last_name='Parfum',
            is_admin=True
        )
        db.session.add(admin)
        
        test_user = User(
            username='testuser',
            email='test@parfum.com',
            password_hash='pbkdf2:sha256:600000$salt$hash',
            first_name='Test',
            last_name='User',
            phone='+212600154487'
        )
        db.session.add(test_user)
        db.session.commit()
        print("‚úÖ Utilisateurs cr√©√©s")
        
        # Cr√©er les parfums
        perfumes = [
            {'name': 'Chanel N¬∞5 EDP 50ml', 'description': 'Le parfum le plus c√©l√®bre au monde. Un bouquet floral ald√©hyd√© intemporel et myst√©rieux.', 'price': 89.90, 'category': 'Eau de Parfum', 'material': 'Chanel - Femme - 50ml', 'stock_quantity': 25},
            {'name': 'Dior Sauvage EDT 100ml', 'description': 'Un parfum masculin frais et puissant inspir√© des grands espaces.', 'price': 79.90, 'category': 'Eau de Toilette', 'material': 'Dior - Homme - 100ml', 'stock_quantity': 30},
            {'name': 'Tom Ford Black Orchid EDP 50ml', 'description': 'Un parfum luxueux et myst√©rieux aux accords floraux noirs et √©pic√©s.', 'price': 129.90, 'category': 'Eau de Parfum', 'material': 'Tom Ford - Mixte - 50ml', 'stock_quantity': 15},
            {'name': 'Herm√®s Terre d\'Herm√®s EDT 100ml', 'description': 'Un parfum qui raconte la relation de l\'homme √† la terre.', 'price': 94.90, 'category': 'Eau de Toilette', 'material': 'Herm√®s - Homme - 100ml', 'stock_quantity': 20},
            {'name': 'YSL Black Opium EDP 50ml', 'description': 'Un parfum f√©minin addictif aux notes de caf√© et de vanille.', 'price': 84.90, 'category': 'Eau de Parfum', 'material': 'YSL - Femme - 50ml', 'stock_quantity': 22},
            {'name': 'Creed Aventus EDP 50ml', 'description': 'Un parfum masculin l√©gendaire aux notes fruit√©es et bois√©es.', 'price': 189.90, 'category': 'Eau de Parfum', 'material': 'Creed - Homme - 50ml', 'stock_quantity': 10},
            {'name': 'Lanc√¥me La Vie Est Belle EDP 50ml', 'description': 'Un parfum gourmand et floral qui c√©l√®bre la joie de vivre.', 'price': 76.90, 'category': 'Eau de Parfum', 'material': 'Lanc√¥me - Femme - 50ml', 'stock_quantity': 18},
            {'name': 'Armani Acqua di Gi√≤ EDT 100ml', 'description': 'Un parfum aquatique frais et m√©diterran√©en.', 'price': 69.90, 'category': 'Eau de Toilette', 'material': 'Armani - Homme - 100ml', 'stock_quantity': 28},
            {'name': 'Versace Eros EDT 100ml', 'description': 'Un parfum masculin passionn√© et audacieux.', 'price': 59.90, 'category': 'Eau de Toilette', 'material': 'Versace - Homme - 100ml', 'stock_quantity': 35},
            {'name': 'Paco Rabanne 1 Million EDT 100ml', 'description': 'Un parfum masculin dor√© et s√©ducteur.', 'price': 64.90, 'category': 'Eau de Toilette', 'material': 'Paco Rabanne - Homme - 100ml', 'stock_quantity': 32}
        ]
        
        print("\nüå∏ Cr√©ation des parfums...")
        for perfume_data in perfumes:
            perfume = Product(**perfume_data)
            db.session.add(perfume)
            print(f"  ‚úÖ {perfume_data['name']}")
        
        db.session.commit()
        print(f"‚úÖ {len(perfumes)} parfums cr√©√©s")
        
        # Cr√©er le dossier uploads
        uploads_dir = 'static/uploads'
        if not os.path.exists(uploads_dir):
            os.makedirs(uploads_dir)
        
        # Cr√©er les images SVG
        print("\nüé® Cr√©ation des images SVG...")
        create_svg_images(uploads_dir)
        
        # Ajouter les images en base
        print("\nüñºÔ∏è Ajout des images en base...")
        add_images_to_db()
        
        print("\n‚úÖ Configuration termin√©e avec succ√®s!")

def create_svg_images(uploads_dir):
    """Cr√©er les images SVG"""
    svg_template = '''<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 300">
    <defs>
        <linearGradient id="grad{id}" x1="0%" y1="0%" x2="100%" y2="100%">
            <stop offset="0%" style="stop-color:{color1}" />
            <stop offset="100%" style="stop-color:{color2}" />
        </linearGradient>
    </defs>
    <rect x="60" y="80" width="80" height="180" rx="10" fill="url(#grad{id})" stroke="#333" stroke-width="2"/>
    <rect x="70" y="60" width="60" height="30" rx="5" fill="#FFD700" stroke="#333" stroke-width="2"/>
    <rect x="85" y="40" width="30" height="25" rx="3" fill="#C0C0C0" stroke="#333" stroke-width="1"/>
    <rect x="65" y="120" width="70" height="40" rx="3" fill="white" stroke="#333" stroke-width="1"/>
    <text x="100" y="135" text-anchor="middle" font-family="Arial" font-size="8" fill="#333">Parfum {num}</text>
    <text x="100" y="150" text-anchor="middle" font-family="Arial" font-size="6" fill="#666">{view}</text>
    <rect x="65" y="85" width="15" height="100" rx="5" fill="rgba(255,255,255,0.3)"/>
</svg>'''
    
    colors = [
        ('#FFD700', '#FFA500'), ('#87CEEB', '#4682B4'), ('#DDA0DD', '#8B008B'),
        ('#F0E68C', '#DAA520'), ('#FFB6C1', '#FF69B4'), ('#98FB98', '#32CD32'),
        ('#F5DEB3', '#D2691E'), ('#87CEFA', '#1E90FF'), ('#DEB887', '#8B4513'),
        ('#FFE4B5', '#FF8C00')
    ]
    
    for i in range(1, 11):
        color1, color2 = colors[i-1]
        views = [
            ('main', 'Principal', color1, color2),
            ('side', 'C√¥t√©', color2, color1),
            ('back', 'Arri√®re', '#E6E6FA', '#D8BFD8'),
            ('box', 'Bo√Æte', '#F5F5DC', '#DDD'),
        ]
        
        for view, view_name, c1, c2 in views:
            filename = f'perfume-{i}-{view}.svg'
            filepath = os.path.join(uploads_dir, filename)
            
            svg_content = svg_template.format(
                id=f'{i}{view}',
                color1=c1,
                color2=c2,
                num=i,
                view=view_name
            )
            
            with open(filepath, 'w', encoding='utf-8') as f:
                f.write(svg_content)
    
    print("  ‚úÖ 40 images SVG cr√©√©es")

def add_images_to_db():
    """Ajouter les images en base de donn√©es"""
    with app.app_context():
        products = Product.query.all()
        
        total_images = 0
        for i, product in enumerate(products, 1):
            images_data = [
                {'filename': f'perfume-{i}-main.svg', 'alt_text': f'{product.name} - Vue principale', 'is_primary': True, 'order': 1},
                {'filename': f'perfume-{i}-side.svg', 'alt_text': f'{product.name} - Vue de c√¥t√©', 'is_primary': False, 'order': 2},
                {'filename': f'perfume-{i}-back.svg', 'alt_text': f'{product.name} - Vue arri√®re', 'is_primary': False, 'order': 3},
                {'filename': f'perfume-{i}-box.svg', 'alt_text': f'{product.name} - Avec emballage', 'is_primary': False, 'order': 4},
            ]
            
            for img_data in images_data:
                image = ProductImage(
                    product_id=product.id,
                    filename=img_data['filename'],
                    alt_text=img_data['alt_text'],
                    is_primary=img_data['is_primary'],
                    display_order=img_data['order']
                )
                db.session.add(image)
                total_images += 1
        
        db.session.commit()
        print(f"  ‚úÖ {total_images} images ajout√©es")

def test_gallery():
    """Tester la galerie"""
    with app.app_context():
        print("\nüß™ Test de la galerie...")
        
        product = Product.query.first()
        if product:
            print(f"  üå∏ Test avec: {product.name}")
            print(f"  üåü Image principale: {product.get_primary_image().filename if product.get_primary_image() else 'Aucune'}")
            print(f"  üì∏ Total images: {len(product.get_all_images())}")
            print(f"  üñºÔ∏è Images galerie: {len(product.get_gallery_images())}")
            print(f"  üî¢ Plusieurs images: {product.has_multiple_images}")
        else:
            print("  ‚ùå Aucun produit trouv√©")

def main():
    """Fonction principale"""
    reset_and_setup()
    test_gallery()
    
    print("\n" + "=" * 60)
    print("üéâ STORE DE PARFUMS AVEC IMAGES MULTIPLES PR√äT!")
    print("=" * 60)
    print("‚úÖ 10 parfums de luxe")
    print("‚úÖ 40 images SVG (4 par parfum)")
    print("‚úÖ Galerie interactive avec navigation")
    print("‚úÖ Zoom et modal d'images")
    print("‚úÖ Support clavier et tactile")
    print("‚úÖ Design responsive")
    print("‚úÖ Utilisateurs de test")
    print("\nüå∏ Fonctionnalit√©s galerie:")
    print("   ‚Ä¢ Image principale + 3 images galerie")
    print("   ‚Ä¢ Navigation avec miniatures")
    print("   ‚Ä¢ Zoom sur clic")
    print("   ‚Ä¢ Swipe mobile")
    print("   ‚Ä¢ Navigation clavier (fl√®ches)")
    print("   ‚Ä¢ Badges compteur d'images")
    print("\nüåê Acc√®s: http://127.0.0.1:5001")
    print("üë§ Admin: admin@parfum.com / admin123")
    print("üì± Test: test@parfum.com / admin123")

if __name__ == '__main__':
    main()
